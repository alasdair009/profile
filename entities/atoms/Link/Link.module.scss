@use "../../../app/styles/colors";
@use "../../../app/styles/animation";
@use "../../../app/styles/dimensions";
@use "../../../app/styles/typography";
@use "../../../app/styles/lineClamp";
@use "../../../app/styles/helpers/rem";
@use "sass:map";

@function generatePolygonLine($yOffset: 0) {
  @return polygon(
    0 0,
    30% #{$yOffset * 0.9%},
    50% #{$yOffset * 1%},
    70% #{$yOffset * 0.9%},
    100% 0,
    100% 25%,
    70% #{25 + $yOffset * 0.9%},
    50% #{25 + $yOffset * 1%},
    30% #{25 + $yOffset * 0.9%},
    0 25%
  );
}

@keyframes pressDown {
  from {
    clip-path: generatePolygonLine(0);
  }
  to {
    clip-path: generatePolygonLine(50);
  }
}

@keyframes release {
  0% {
    clip-path: generatePolygonLine(50);
  }
  60% {
    clip-path: generatePolygonLine(-30);
  }
  80% {
    clip-path: generatePolygonLine(20);
  }
  100% {
    clip-path: generatePolygonLine(0);
  }
}

.root {
  align-items: center;
  color: colors.$colorWhiteGhost;
  display: inline-flex;
  font-size: inherit;
  font-weight: map.get(typography.$fontWeights, bold);
  max-width: dimensions.getSize(s512);
  position: relative;
  text-decoration: none;
  word-break: break-word;

  &:hover {
    filter: brightness(1.3);

    &::after {
      animation: pressDown animation.animationDuration(0.1);
      animation-fill-mode: forwards;
    }

    .hoverIFrameWrapper {
      display: block;
    }
  }

  &:visited,
  &:active {
    color: colors.$colorWhiteGhost;
  }

  &::after {
    animation: release animation.animationDuration(0.2);
    animation-fill-mode: forwards;
    background: colors.$colorWhiteGhost;
    bottom: calc(#{rem.toRem(7)} * -1);
    clip-path: generatePolygonLine();
    content: "";
    height: dimensions.getSize(s8);
    left: 0;
    position: absolute;
    width: 100%;
  }

  &Clamp {
    @include lineClamp.lineClamp;
  }

  &.Large {
    color: colors.$colorGreenGrass;
    font-size: typography.getFontSize(large);
    padding-bottom: calc(#{dimensions.getSize(s16)} + 2px);
    text-transform: uppercase;

    &:visited,
    &:active {
      color: colors.$colorGreenGrass;
    }

    &::after {
      bottom: 0;
      height: dimensions.getSize(s16);
    }
  }
}

.newTabIcon {
  display: inline-block;
  height: dimensions.getSize(s16);
  margin-left: dimensions.getSize(s4);
  width: dimensions.getSize(s16);
}

.hoverIFrameWrapper {
  aspect-ratio: 16 / 9;
  background: colors.$colorGreyDark;
  border: dimensions.getSize(s8) solid colors.$colorGreyDark;
  box-shadow: 0 0 rem.toRem(2) rem.toRem(2) colors.$colorblackEvil;
  display: none;
  height: calc(#{dimensions.getSize(s128)} + #{dimensions.getSize(s16)});
  overflow: hidden;
  position: absolute;
  left: 50%;
  top: 100%;
  transform: translate(-50%, 0);
  transition: all animation.animationDuration(0.2);
  user-select: none;
}

.hoverIFrame {
  aspect-ratio: unset;
  height: calc(1000% - #{dimensions.getSize(s16)});
  left: 50%;
  position: absolute;
  top: 50%;
  transform: translate(-50%, -50%) scale(0.5);
  width: calc(1000% - #{dimensions.getSize(s16)});
}

@use "../../../app/styles/animation";
@use "../../../app/styles/colors";
@use "../../../app/styles/dimensions";
@use "../../../app/styles/radii";
@use "../../../app/styles/typography";
@use "../../../app/styles/helpers/rem";
@use "sass:map";

@keyframes baseRotate {
  0% {
    transform: rotateY(0);
  }
  100% {
    transform: rotateY(400grad);
  }
}

@keyframes rotating {
  0% {
    transform: rotateZ(calc(var(--position) * 40 * 1grad)) rotateY(0);
  }
  100% {
    transform: rotateZ(calc(var(--position) * 40 * 1grad)) rotateY(400grad);
  }
}

.root {
  margin: 0 auto;
  max-width: rem.toRem(dimensions.$globalContentMaxWidth);
  padding: dimensions.getSize(s64) 0;
  position: relative;
}

.stage {
  align-items: center;
  display: flex;
  height: 100%;
  justify-content: center;
  margin: 0 auto;
  max-width: rem.toRem(480);
  perspective: 300px;
  width: 100%;
}

.particle {
  animation: rotating var(--time) calc(var(--position) * -2 * 1s)
    map.get(animation.$curves, linear) infinite;
  left: -16%;
  margin-top: -5%;
  padding-bottom: 10%;
  position: absolute;
  right: -16%;
  top: 50%;
  transform-style: preserve-3d;
  transition: animation-duration animation.animationDuration(1);

  &::before {
    align-items: center;
    animation: baseRotate var(--time) calc(var(--position) * -2 * 1s)
      map.get(animation.$curves, linear) infinite reverse;
    background-color: var(--color);
    border-radius: radii.getBorderRadii(round);
    bottom: 0;
    box-shadow:
      inset rem.toRem(5) rem.toRem(5) rem.toRem(10)
        rgba(colors.$colorWhiteGhost, 0.2),
      inset rem.toRem(-5) rem.toRem(-5) rem.toRem(10)
        rgba(colors.$colorWhiteGhost, 0.2);
    content: var(--content);
    display: flex;
    font-size: typography.getFontSize(small);
    justify-content: center;
    left: 0;
    position: absolute;
    top: 0;
    width: 7.5%;
  }
}

.core {
  aspect-ratio: 1;
  background-image:
    radial-gradient(transparent 40%, colors.$colorWhiteGhost),
    linear-gradient(
      rgba(colors.$colorWhiteGhost, 0.8),
      rgba(colors.$colorWhiteGhost, 0.8)
    ),
    radial-gradient(colors.$colorWhiteGhost 10%, transparent 50%);
  background-position:
    0 0,
    50% 50%,
    50% 50%;
  background-repeat: no-repeat;
  background-size:
    120% 120%,
    100% 100%,
    60% 60%;
  border-radius: radii.getBorderRadii(round);
  box-shadow:
    rem.toRem(80) rem.toRem(80) dimensions.getSize(s128) rgba(0, 0, 0, 0.5),
    0 0 5rem rgba(colors.$colorWhiteGhost, 0.8);
  margin: 0 auto;
  max-width: dimensions.getSize(s192);
  position: relative;
  transform-style: preserve-3d;
  width: 100%;

  @media (map.get(dimensions.$device, medium)) {
    max-width: dimensions.getSize(s256);
  }

  &::before,
  &::after {
    border-radius: radii.getBorderRadii(round);
    content: "";
    height: 100%;
    position: absolute;
    width: 100%;
  }

  &::before {
    background: radial-gradient(
      colors.$colorGreenGrass,
      rgba(colors.$colorGreenGrass, 0.15)
    );
    mask: url(../../assets/am.svg) no-repeat center;
    opacity: 0.1;
  }

  &::after {
    background: url(../../assets/am.svg) no-repeat center;
    opacity: 0;
    transition: opacity animation.animationDuration(0.5);

    @media (prefers-reduced-motion) {
      opacity: 1;
    }
  }

  &:hover {
    &::after {
      opacity: 1;
    }

    .particle {
      animation-duration: animation.animationDuration(10);
    }
  }
}

@use "../../../app/styles/animation";
@use "../../../app/styles/colors";
@use "../../../app/styles/dimensions";
@use "../../../app/styles/radii";
@use "../../../app/styles/helpers/rem";
@use "sass:map";

.root {
  display: block;
  margin: 0 auto;
  max-width: rem.toRem(dimensions.$globalDecorationMaxWidth);
  position: relative;
  width: 100%;
}

.inner {
  align-items: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  margin: 0 auto;
  max-width: rem.toRem(dimensions.$globalContentMaxWidth);
}

.house {
  aspect-ratio: 1;
  height: auto;
  max-width: rem.toRem(900);
  position: relative;
  width: 100%;
}

.frame {
  background: var(--background);
  border-radius: 2px;
  border-color: #ddd #eee #fff #eee;
  border-style: solid;
  border-width: 5vmin;
  box-shadow:
    0 0 rem.toRem(5) 0 rgba(colors.$colorWhiteGhost, 0.25) inset,
    0 rem.toRem(5) rem.toRem(10) rem.toRem(5) rgba(colors.$colorblackEvil, 0.25);
  display: flex;
  margin: 10vh 10vw 5vh;
  position: relative;

  &::before {
    border-radius: radii.getBorderRadii(r2);
    bottom: -2vmin;
    box-shadow: 0 rem.toRem(2) rem.toRem(5) 0 rgba(colors.$colorblackEvil, 0.25)
      inset;
    content: "";
    left: -2vmin;
    position: absolute;
    right: -2vmin;
    top: -2vmin;
  }

  &::after {
    border-radius: radii.getBorderRadii(r2);
    bottom: -2.5vmin;
    box-shadow: 0 rem.toRem(2) rem.toRem(5) 0 rgba(colors.$colorblackEvil, 0.25);
    content: "";
    left: -2.5vmin;
    position: absolute;
    right: -2.5vmin;
    top: -2.5vmin;
  }
}

.houseTree {
  height: dimensions.getSize(s64);
  position: absolute;
  right: var(--right);
  top: var(--top);
  width: dimensions.getSize(s64);
}

.sunAnchor {
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  transform: rotate(calc(var(--rotation) * 1deg));
  transition: transform animation.animationDuration(1)
    map.get(animation.$curves, default);
  width: 100%;
}

.sun {
  left: dimensions.getSize(s24);
  position: absolute;
  top: 50%;
  transform: translate(-50%, -50%);
}

.moon {
  position: absolute !important;
  right: dimensions.getSize(s8);
  top: 50%;
  transform: translate(-50%, -50%);
}

.cloudWrapper {
  height: 100%;
  left: 0;
  overflow: hidden;
  position: absolute;
  top: 0;
  width: 100%;
}

.cloud {
  height: dimensions.getSize(s512);
  left: var(--xPos);
  opacity: 0.65;
  position: absolute;
  top: var(--yPos);
  transform: translate(-50%, -50%) scale(0.2);
  width: dimensions.getSize(s1024);
}
